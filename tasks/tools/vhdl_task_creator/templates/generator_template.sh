#!/bin/bash

########################################################################
# generator.sh for VHDL task {{task_name}}
# Generates the individual tasks, enters in databases and moves
# description files to user folder
#
# Automatically generated by the autosub vhdl_task_creator tool
########################################################################


##########################
####### PARAMETERS #######
##########################
user_id=$1
task_nr=$2
submission_email=$3
mode=$4
semester_db=$5
language=$6

##########################
########## PATHS #########
##########################
# src path of autosub system
autosub_path=$(pwd)
# root path of the task itself
task_path=$(readlink -f $0|xargs dirname)
# path for all the files that describe the created path
desc_path="${autosub_path}/users/${user_id}/Task${task_nr}/desc"

##########################
##### PATH CREATIONS #####
##########################
if [ ! -d "${task_path}/tmp" ]
then
   mkdir ${task_path}/tmp
fi

if [ ! -d "${desc_path}" ]
then
   mkdir ${desc_path}
fi

##########################
####### GENERATE #########
##########################
cd ${task_path}

task_parameters=$(python3 scripts/generateTask.py "${user_id}" "${task_nr}" "${submission_email}" "${language}")

#generate the description pdf and move it to user's description folder
cd ${task_path}/tmp

pdflatex -halt-on-error desc_${user_id}_Task${task_nr}.tex >/dev/null
RET=$?
zero=0
if [ "$RET" -ne "$zero" ];
then
    echo "ERROR with pdf generation for Task${task_nr} !!! Are all needed LaTeX packages installed??">&2
fi

rm desc_${user_id}_Task${task_nr}.aux
rm desc_${user_id}_Task${task_nr}.log
rm desc_${user_id}_Task${task_nr}.tex

#copy & move files to ${desc_path}
{{copy_move_commands}}

#ADD HERE -- additional needed copies / moves here (e.g testbench_exam)

##########################
##   EMAIL ATTACHMENTS  ##
##########################
task_attachments=""
task_attachments_base="{{attachments_base}}"

#UNCOMMENT HERE for specifying testbench file for exam mode
#$testbench_exam_path=${desc_path}/PATH # CHANGE HERE
#if [ -n "${mode}" ];
#then
#    if [ "${mode}" = "exam" ];
#    then
#        task_attachments="${task_attachments_base} $testbench_exam_path"
#    fi
#fi

if [ -z "${mode}" ] || [ "${mode}" = "normal" ]; #default to normal
then
    task_attachments="${task_attachments_base}"
fi

##########################
## ADD TASK TO DATABASE ##
##########################
cd ${autosub_path}/tools
python3 add_to_usertasks.py -u ${user_id} -t ${task_nr} -p "${task_parameters}" -a "${task_attachments}" -d ${semester_db}
